{"version":3,"sources":["../../src/pages/graphs/graph-line/graph-line.module.ts","../../src/pages/graphs/graph-line/graph-line.ts"],"names":[],"mappings":"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","file":"3.js","sourcesContent":["import { NgModule, CUSTOM_ELEMENTS_SCHEMA, NO_ERRORS_SCHEMA } from '@angular/core';\r\nimport { IonicPageModule } from 'ionic-angular';\r\nimport { GraphLinePage } from './graph-line';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    GraphLinePage,\r\n  ],\r\n  imports: [\r\n    IonicPageModule.forChild(GraphLinePage),\r\n  ],\r\n  exports: [GraphLinePage],\r\n  schemas: [ CUSTOM_ELEMENTS_SCHEMA, NO_ERRORS_SCHEMA ]\r\n})\r\nexport class GraphLinePageModule {}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/graphs/graph-line/graph-line.module.ts","import { Component, Input, ViewChild, OnInit, OnChanges, AfterViewInit, SimpleChanges } from '@angular/core';\r\nimport { IonicPage, NavController, NavParams } from 'ionic-angular';\r\nimport { C3ServiceProvider, C3, D3 } from '../../../providers/c3-service/c3-service';\r\n/**\r\n * Generated class for the GraphLinePage page.\r\n *\r\n * See http://ionicframework.com/docs/components/#navigation for more info\r\n * on Ionic pages and navigation.\r\n */\r\n\r\n@IonicPage()\r\n@Component({\r\n  selector: 'graph-line',\r\n  templateUrl: 'graph-line.html',\r\n})\r\nexport class GraphLinePage implements OnInit, AfterViewInit, OnChanges {\r\n  @ViewChild('chart') chart;\r\n  @Input('card') card;\r\n  private c3: C3;\r\n  private d3: D3;\r\n  viewInit: boolean = false;\r\n\r\n  constructor(public navCtrl: NavController, public navParams: NavParams, private c3Service: C3ServiceProvider) {\r\n    this.c3 = c3Service.getC3();\r\n    this.d3 = c3Service.getD3();\r\n  }\r\n\r\n  ionViewDidLoad() {\r\n  }\r\n\r\n  ngOnInit() {\r\n    //Called after the constructor, initializing input properties, and the first call to ngOnChanges.\r\n    //Add 'implements OnInit' to the class.\r\n\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    //Called before any other lifecycle hook. Use it to inject dependencies, but avoid any serious work here.\r\n    //Add '${implements OnChanges}' to the class.\r\n    if(this.viewInit){\r\n      if(typeof changes.card !== 'undefined'){\r\n        this.generateChart();\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    //Called after ngAfterContentInit when the component's view has been initialized. Applies to components only.\r\n    //Add 'implements AfterViewInit' to the class.\r\n    this.viewInit = true;\r\n    this.generateChart();\r\n  }\r\n\r\n  generateChart() {\r\n    if (!this.card) {\r\n      return;\r\n    }\r\n    console.log(this.card);\r\n    let self = this;\r\n    let colors: any[] = ['green', 'orange'];\r\n    let bar_width = this.chart.nativeElement.offsetWidth;\r\n    let bar_height = bar_width;\r\n    let xlabels = this.card['line_one_xlabel'].slice(0);\r\n    let line_one = this.card['line_one_data'].slice(0);\r\n    let line_two = this.card['line_two_data'].slice(0);\r\n    let labels = this.card['labels'].slice(0);\r\n    let formatter: any = this.card.getFormatter();\r\n    line_one.unshift('Actual');\r\n    line_two.unshift('Target');\r\n    let options: any = {\r\n      // bindto: \".\" + self.barclass + \"-bar\",\r\n      bindto: this.chart.nativeElement,\r\n      zoom: {\r\n        enabled: false,\r\n        //rescale: true,\r\n      },\r\n      transition: {\r\n        duration: 100\r\n      },\r\n      color: {\r\n        pattern: colors\r\n      },\r\n      legend: {\r\n        show: false\r\n      },\r\n      size: {\r\n        height: bar_height,\r\n        width: bar_width\r\n      },\r\n      data: {\r\n        columns: [line_two, line_one],\r\n        axes: {\r\n          // Cost: 'y',\r\n          // 'CPC': 'y2'\r\n        },\r\n        type: 'line',\r\n        types: {\r\n          // 'CPC': 'line',\r\n          // CTR: 'line',\r\n          // CPQ: 'line'\r\n        },\r\n        labels: false\r\n      },\r\n\r\n      axis: {\r\n\r\n        x: {\r\n          min: 0,\r\n          padding:{\r\n            left: 0,\r\n            right: 0\r\n          },\r\n          type: 'category',\r\n          //type: 'timeseries',\r\n          tick: {\r\n            fit: true,\r\n            centered: true,\r\n            culling: {\r\n              //max: 5\r\n            },\r\n            multiline: false,\r\n            format: function (x) {\r\n              return x;//self.util.formatXaxis(xlabels[x + 1], slug)\r\n            }\r\n\r\n            //format: '%b-%d',\r\n\r\n          }\r\n        },\r\n        y: {\r\n          min: 0,\r\n          show: true,\r\n          padding: {\r\n            bottom: 0\r\n          },\r\n          tick: {\r\n            format: formatter // ADD\r\n            //count: 5\r\n          }\r\n        },\r\n      },\r\n      grid: {\r\n        y: {\r\n          show: true\r\n        },\r\n        x: {\r\n          show: true\r\n        }\r\n      },\r\n\r\n      point: {\r\n        r: 3,\r\n        focus: {\r\n          expand: {\r\n            r: 4.5\r\n          }\r\n        }\r\n      }\r\n      // ,\r\n\r\n      // onresized: function () {\r\n      //   let o = self.chartObj;\r\n      //   let el = self.parentNativeElement.childNodes[0];\r\n      //   // debugger;\r\n      //   this.api.resize({   //this is the context of c3 and with that all c3 apis are available\r\n      //     width: el.offsetWidth\r\n      //     // height: el.offsetHeight\r\n      //   });\r\n      // }\r\n\r\n    };\r\n\r\n    let graph = this.c3.generate(options);\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/graphs/graph-line/graph-line.ts"],"sourceRoot":""}